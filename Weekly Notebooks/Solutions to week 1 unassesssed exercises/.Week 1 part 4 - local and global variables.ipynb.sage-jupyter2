{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":false,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"59c7d0","input":"a = 2               # a is a global variable, defined outside any function definition\n\ndef h(x):\n    return x + a    # we can use global variables anywhere, including inside functions\n\nh(1)                # this will output 3","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9f0ac8","input":"b                 # this is an error - the local variable b is not accessible outside the definition of k","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f44d23","input":"def k(x):\n    b = 2         # b is a local variable for the function k\n    return x + b\n\nk(1)              # this is fine and gives the result 3","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"fbbb81","input":"a = 2\n\ndef h(x):\n    a = 3\n    return x + a\n\nprint(a)\nprint(h(0))\nprint(a)","output":{"0":{"name":"stdout","output_type":"stream","text":"2\n3\n2\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"864939","input":"n = 3\n\ndef k(x):\n    return x + n\n\nprint(k(1))\n\nn = 5\n\nprint(k(1))","output":{"0":{"name":"stdout","output_type":"stream","text":"4\n6\n"}},"pos":8,"type":"cell"}
{"cell_type":"markdown","id":"656bf1","input":"# Local and global variables\n\nA variable that you define *outside* any function definitions is called a **global variable**, because you can access it anywhere, including inside function definitions.","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"ac2fee","input":"A variable that you define inside a function definition is called a **local variable** for that function.  That means it is *not* accessible outside the function itself.","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"ac7f7e","input":"The variable `a` defined to be `3` inside the function `h` is different to the global variable `a` defined to be `2` on the first line.\n\nIf you think this is confusing, you're right. Just because you can have local variables with the same names as globals doesn't mean you should! Avoid doing this wherever possible.\n\nHere's another way in which global variables can be confusing. What do you think will be printed when you run the next cell?","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"bd53b9","input":"The same function was called twice with the same input, and we got two different outputs!\n\nThis doesn't mean that you should never use global variables - it's often essential -  but you should be careful when you do so. They make your code harder to reason about and can cause unexpected behaviour.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"c22c77","input":"The code above causes an error \n\n>`NameError: name 'b' is not defined`. \n\nDon't define variables inside functions and expect them to be available elsewhere.\n\nAny variables you create inside a function are local to that function.  You can even create a local variable with the same name as a global variable, and the two will be kept separate:","pos":5,"type":"cell"}
{"id":0,"time":1611420674040,"type":"user"}
{"last_load":1611420674252,"type":"file"}