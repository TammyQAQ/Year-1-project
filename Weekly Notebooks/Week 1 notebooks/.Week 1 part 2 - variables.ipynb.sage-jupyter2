{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-8b6c5417-b3f3-4a4e-8b3b-d0a1cace928a.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1611068043985,"exec_count":2,"id":"a707c7","input":"phi = (1 + 5 ** 0.5) / 2\na = 1","kernel":"python3","pos":1,"start":1611068043942,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068050983,"exec_count":3,"id":"782fff","input":"phi ** 2 - phi - 1","kernel":"python3","output":{"0":{"data":{"text/plain":"0.0"},"exec_count":3}},"pos":3,"start":1611068050969,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068072155,"exec_count":4,"id":"13c9ca","input":"phi + a","kernel":"python3","output":{"0":{"data":{"text/plain":"2.618033988749895"},"exec_count":4}},"pos":4,"start":1611068072148,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068143387,"exec_count":6,"id":"db0aa1","input":"a","kernel":"python3","output":{"0":{"data":{"text/plain":"2"},"exec_count":6}},"pos":10,"start":1611068143379,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068153900,"exec_count":7,"id":"7f5079","input":"a = a + 1","kernel":"python3","pos":8,"start":1611068153895,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068164214,"exec_count":8,"id":"51cdeb","input":"y = a + 1","kernel":"python3","pos":6,"start":1611068164208,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068206423,"exec_count":9,"id":"ee6d1b","input":"a == 2","kernel":"python3","output":{"0":{"data":{"text/plain":"False"},"exec_count":9}},"pos":12,"start":1611068206414,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068211401,"exec_count":10,"id":"917608","input":"0 == 1","kernel":"python3","output":{"0":{"data":{"text/plain":"False"},"exec_count":10}},"pos":13,"start":1611068211393,"state":"done","type":"cell"}
{"cell_type":"code","end":1611068213975,"exec_count":11,"id":"f995a4","input":"1/2 == 0.5","kernel":"python3","output":{"0":{"data":{"text/plain":"True"},"exec_count":11}},"pos":14,"start":1611068213965,"state":"done","type":"cell"}
{"cell_type":"code","end":1611069797942,"exec_count":12,"id":"9f35fd","input":"the number of MATH0011 students = 460","kernel":"python3","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-12-2cb04b4e3525>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-12-2cb04b4e3525>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    the number of MATH0011 students = 460\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":18,"start":1611069797927,"state":"done","type":"cell"}
{"cell_type":"code","end":1611069801426,"exec_count":13,"id":"22b7cf","input":"pi = 3.141592654\nradius = 4\narea_of_circle = pi * radius ** 2\narea_of_circle","kernel":"python3","output":{"0":{"data":{"text/plain":"50.265482464"},"exec_count":13}},"pos":16,"start":1611069801414,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"69eee0","input":"### Variable name rules\n\nVariables can have names with more than one character.  The rules for variable names are simple:\n\n- you can only use letters, numbers, and underscores `_`,\n- you can't use certain special \"keywords\" that Python needs for other purposes,\n- variable names can't start with a number.\n\nLonger names can be helpful because you can give variables descriptive names that make the code you write easier to understand.","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"778390","input":"Now you can use `phi` and `a` in calculations:","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"7ce42b","input":"### Checking for equality\n\nSince `=` is used for variable assignment in Python, we must use a different symbol for checking if two things are equal. To check if two things are equal in Python you must use two equals signs, like this `==`.  The answer will be `True` or `False` - these are *booleans* which you will learn about in a later notebook this week.","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"8091a8","input":"Spaces aren't allowed in variable names. The next cell will cause an error:","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"843fe7","input":"(If you get a `NameError` saying that `'a' is not defined` when you run the cell above, it's because you haven't run cell 2 above where `a` was defined.)\n\nYou can even do this:","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"c9357c","input":"### Variables\n\nThis is part 2 of the week 1 notebook. Remember that to run a code cell you must click in the cell and press shift and enter.\n\nIn maths we often say things like \"let $\\phi = \\frac{1+\\sqrt{5}}{2}$\" because it saves us writing out complicated expressions lots of times.  You can do exactly the same thing in Python.  Use shift-enter to run the next cell:","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"ee1744","input":"`phi` and `a` (and anything else you define in this way) are called **variables**.  You can define variables in terms of other variables:","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"f6556c","input":"As an equation, this wouldn't make any sense: there aren't any numbers $a$ such that $a=a+1$.  A single equals sign `=` in Python means *assignment* not equality.  \n`y = x + 1` means \"assign the variable `y` the value of `x` plus one\", and `a = a + 1` means \"assign the variable `a` its old value plus one.\"\n\nWhat will the value of `a` be after you hvae run the code cell containing `a = a + 1` above?  Run the next cell to see if you were right.","pos":9,"type":"cell"}
{"id":"c7b703","input":"","pos":19,"type":"cell"}
{"id":0,"time":1611069832775,"type":"user"}
{"last_load":1611067467383,"type":"file"}