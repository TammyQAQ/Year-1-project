{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-a056ab4d-96a8-41bb-972a-70d6d6a1706c.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"00aba8","input":"","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"bc7ab3","input":"","pos":32,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"1f717f","input":"phoneNumbers = {}","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"a852ac","input":"phoneNumbers = {\"UCL Security\" : \"222\", \"UCL Admissions\" : \"020 3370 1215\"}","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"6b0ef4","input":"counter = {i : 0 for i in range(10)}","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"4eec95","input":"counter.keys()","output":{"0":{"data":{"text/plain":"dict_keys([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"},"exec_count":12,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"04f846","input":"counter.values()","output":{"0":{"data":{"text/plain":"dict_values([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"},"exec_count":13,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"e04551","input":"for name in phoneNumbers:\n    print(\"the number for\", name, \"is\", phoneNumbers[name])","output":{"0":{"name":"stdout","output_type":"stream","text":"the number for UCL Security is 222\nthe number for UCL Admissions is 020 3370 1215\n"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"9b776e","input":"def say('tens' , 'units'):\n    # your code here\n    return (tens_words[tens] + '-' + unit_words[units])","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-19-fab15d278ea8>, line 1)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-19-fab15d278ea8>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    def say('tens' , 'units'):\u001b[0m\n\u001b[0m            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"5b85f7","input":"phoneNumbers[\"UCL Admissions\"] = \"020 3370 1215\"\nphoneNumbers[\"UCL Security\"] = \"222\"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"a8a939","input":"say(2,5)","output":{"0":{"ename":"KeyError","evalue":"2","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-ca36cdf64354>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-17-f1166a66450b>\u001b[0m in \u001b[0;36msay\u001b[0;34m(tens, units)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0msay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtens\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0munits\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0;31m# your code here\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mtens_words\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtens\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'-'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0munit_words\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0munits\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyError\u001b[0m: 2"]}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"b72063","input":"phoneNumbers[\"UCL Admissions\"]","output":{"0":{"data":{"text/plain":"'020 3370 1215'"},"exec_count":3,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"37c6af","input":"phoneNumbers[\"UCL Security\"]","output":{"0":{"data":{"text/plain":"'222'"},"exec_count":4,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"9e6609","input":"\"UCL Admissions\" in phoneNumbers","output":{"0":{"data":{"text/plain":"True"},"exec_count":5,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"41b0b4","input":"unit_words = {'1':'one','2':'two','3':'three','4':'four','5':'five','6':'six','7':'seven','8':'eight','9':'nine'}","pos":26,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"6872f6","input":"\"UCL Maths\" in phoneNumbers","output":{"0":{"data":{"text/plain":"False"},"exec_count":6,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"4df418","input":"tens_words={'2':'twenty','3':'thirty','4':'fourty','5':'fifty','6':'sixty','7':'seventy','8':'eighty','9':'ninety'}","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"89d420","input":"phoneNumbers[\"UCL Maths\"]","output":{"0":{"ename":"KeyError","evalue":"'UCL Maths'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-4656c65697c1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mphoneNumbers\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"UCL Maths\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyError\u001b[0m: 'UCL Maths'"]}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"b8f86f","input":"del phoneNumbers[\"UCL Admissions\"]","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"bf7022","input":"phoneNumbers[\"UCL Admissions\"]","output":{"0":{"ename":"KeyError","evalue":"'UCL Admissions'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-1ba15e91a3a8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mphoneNumbers\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"UCL Admissions\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyError\u001b[0m: 'UCL Admissions'"]}},"pos":15,"type":"cell"}
{"cell_type":"markdown","id":"2079d4","input":"Now use your dictionaries to write a function `say(tens, units)` which returns a string representing how the number `10 * tens + units` is spoken in English. For example, `say(4, 2)` should be `\"forty-two\"`, and `say(2, 5)` should be `\"twenty-five\"`.  **You can assume `tens >= 2`**","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"21a1f6","input":"## Iterating over a dictionary\n\nIt's common to want to do something for every entry in a dictionary. You can use for loops: if `d` is a dictionary then\n\n```python\nfor k in d:\n    # loop body\n```\nwill run the loop body with `k` set to each of the keys of the dictionary `d`. For example:","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"50db36","input":"...which is useful because asking for a key for which no value is set raises a `KeyError`:","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"5f714d","input":"Now create a dictionary `tens_words` whose keys are 2, 3, ..., 9 such that `tens_words[2] = \"twenty\"`, `tens_words[3] = \"thirty\"`, and so on.","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"62ec15","input":"What do you think the keys and values are in `counter`?  You can find out by calling `counter.keys()` and `counter.values()`","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"6b21c8","input":"Now `phoneNumbers` is a dictionary with two keys, whose values you can access as follows:","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"6fe876","input":"## Unassessed exercises\n\n### Exercise 1\n\nIn this exercise you are going to teach Python how to say certain numbers in English.\n\nCreate a dictionary `unit_words` whose keys are 1, 2, ..., 9 such that `unit_words[1] = \"one\"`, `unit_words[2] = \"two\"`, and so on.","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"94b7aa","input":"You can check if a dictionary has a value for a certain key using `in`...","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"b1b9cf","input":"You can even do a \"dictionary comprehension\", like the list comprehensions we met last week.","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"b4e1bb","input":"## Other ways to create dictionaries\n\nInstead of starting with an empty dictionary and adding entries like we did above, you can create a new dictionary with some entries already specified like this:","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"bbe994","input":"We've already seen how to add a key, but we can also remove one using `del`:","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"cbf077","input":"Once you've created a dictionary `d` you can add a key `k` with value `v` by assigning `d[k] = v`","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"de658f","input":"Further suggestions:\n\n- modify `say` so that it can deal with the numbers 10, 11, ..., 19 as well\n- modify `say` so that it can deal with all numbers between 0 and 99\n- modify `say` so that instead of calling `say(4, 2)`, for example, I can instead call `say(42)`\n","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"e9296b","input":"Now that it's removed, asking for `phoneNumbers[\"UCL Admissions\"]` raises a `KeyError`","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"f9e35f","input":"# Week 3 part 1 - dictionaries\n\nA list `l` has entries `l[0], l[1], ..., l[len(l)-1]`, so the data in the list are indexed by the numbers `0, 1, ..., len(l)-1`.  Sometimes it is more natural to index data with something other than 0, 1, 2,...\n\nAs an example, suppose we are writing a program and want to store people's telelphone numbers.  Given someone's name, we will want to access their number.  A natural and easy-to-use way to do this would be to create an object `phoneNumbers` such that `phoneNumbers[\"UCL Security\"]` is UCL Security's phone number.\n\nThe `dict` type, short for dictionary, allows us to do exactly this.  A dictionary has *keys* (in our example, people's names), and associated to each key is a *value* (in our example, the person's phone number).  The value in a dictionary `myDict` associated to the key `k` is accessed with `myDict[k]`.\n\nYou can create an empty dictionary using `{}`","pos":0,"type":"cell"}
{"id":0,"time":1612220747439,"type":"user"}
{"last_load":1612309971172,"type":"file"}