{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-10ec10e3-d6af-4ac2-9021-dd45146995fb.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","end":1612806431223,"exec_count":1,"id":"20c12e","input":"import numpy as np\n\ndef col(A, n):\n    \"\"\"\n    Return the nth column of the 2D array A as a 2D column vector\n    \"\"\"\n    # YOUR CODE HERE\n    a = A.shape[0]\n    return A[:a,n:n+1]","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"checksum":"4dfb4f85ca7ca7cbb01402165de8221f","grade":false,"grade_id":"20c12e","locked":false,"schema_version":3,"solution":true,"task":false}},"pos":1,"start":1612806431215,"state":"done","type":"cell"}
{"cell_type":"code","end":1612806431621,"exec_count":3,"id":"0652ab","input":"# Use this cell to check that your function returns the correct outputs for some sample inpus\n\nA = np.array([[1,2], [3,4]])\nc0 = col(A, 0)\nc1 = col(A, 1)\nprint(c0.shape) # should be (2, 1)\nprint(c1.shape) # should be (2, 1)\nprint(c0) # should look like [[1]\n          #                   [3]]\nprint(c1) # should look like [[2]\n          #                   [4]]\n\n","kernel":"python3","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":true,"grade_id":"0652ab","locked":true,"points":1,"schema_version":3,"solution":false,"task":false}},"output":{"0":{"name":"stdout","text":"(2, 1)\n(2, 1)\n[[1]\n [3]]\n[[2]\n [4]]\n"}},"pos":2,"start":1612806431614,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c42ce5","input":"# Week 4 assessed exercise\n\nThis exercise must be completed by 23:59 GMT on Sunday 19th February.\n\n## Part 1 of 1\n\nWrite a function `col(A, n)` which returns the `n`th column of the NumPy array `A` **as a two-dimensional column vector.**\n\nYou can assume that the input `A` to your function is a two-dimensional NumPy array and the input `n` is an integer such that $0 \\leq n < k$, where $k$ is the number of columns `A` has.\n\nYour function must output a two-dimensional NumPy array whose shape is `(m, 1)` where `m` is the height of `A`.  You must not output a one-dimensional array.\n\nExamples are given in the test cell below.","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"c42ce5","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":0,"type":"cell"}
{"id":"53a56a","input":"","pos":3,"type":"cell"}
{"id":0,"time":1612793149547,"type":"user"}
{"last_load":1612793149463,"type":"file"}