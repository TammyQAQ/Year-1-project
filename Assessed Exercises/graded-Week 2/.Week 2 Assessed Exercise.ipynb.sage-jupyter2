{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-9a53c26d-b5e1-4ff9-949e-a2eec0ffbbff.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","end":1611790509965,"exec_count":14,"id":"f85186","input":"def f(n):\n    \"\"\"\n    Return f(n), as described above.\n    You can assume the input n is a nonnegative integer\n    \"\"\"\n    # YOUR CODE HERE\n    if n%35==0:\n        return (35)\n    elif n%5==0:\n        return (5)\n    elif n%7==0:\n        return (7)\n    else:\n        return (0)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"checksum":"7861975712baae627442ec8633fb0d97","grade":false,"grade_id":"f85186","locked":false,"schema_version":3,"solution":true,"task":false}},"pos":1,"start":1611790509960,"state":"done","type":"cell"}
{"cell_type":"code","end":1611790510468,"exec_count":15,"id":"6ffbbf","input":"# This cell has some test cases you can use to check your function works correctly\n\nprint(f(0)) # should be 35\nprint(f(1)) # should be 0\nprint(f(5)) # should be 5\nprint(f(14)) # should be 7\nprint(f(35)) # should be 35\n","kernel":"python3","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":true,"grade_id":"6ffbbf","locked":true,"points":1,"schema_version":3,"solution":false,"task":false}},"output":{"0":{"name":"stdout","text":"35\n0\n5\n7\n35\n"}},"pos":2,"start":1611790510457,"state":"done","type":"cell"}
{"cell_type":"code","end":1611790520788,"exec_count":16,"id":"08769d","input":"def k(a, b):\n    \"\"\"\n    Return the list [f(a), ..., f(b)]. You can assume a and b are nonnegative integers with a <= b\n    \"\"\"\n    # YOUR CODE HERE\n    return [f(n) for n in range (a,b+1)]","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"checksum":"0c7f7ad5bd29ede51af31e8838c2fccb","grade":false,"grade_id":"08769d","locked":false,"schema_version":3,"solution":true,"task":false}},"pos":4,"start":1611790520779,"state":"done","type":"cell"}
{"cell_type":"code","end":1611790522559,"exec_count":17,"id":"f4d784","input":"# This cell has some test cases you can use to check your function works correctly\n\nprint(k(4, 6)) # should be [0, 5, 0]\nprint(k(0, 10)) # should be [35, 0, 0, 0, 0, 5, 0, 7, 0, 0, 5]\n","kernel":"python3","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":true,"grade_id":"f4d784","locked":true,"points":1,"schema_version":3,"solution":false,"task":false}},"output":{"0":{"name":"stdout","text":"[0, 5, 0]\n[35, 0, 0, 0, 0, 5, 0, 7, 0, 0, 5]\n"}},"pos":5,"start":1611790522552,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d3e24c","input":"# Week 2 Assessed Exercise\n\nThe deadline for both parts of this assessed exercise is Sunday 31st January 23:59 GMT Sunday.\n\n## Part 1\n\nWrite a Python function `f` such that `f(n)` equals\n\n- 5, if n is divisible by 5 but not by 7\n- 7, if n is divisible by 7 but not by 5\n- 35, if n is divisible by 7 and by 5\n- 0 otherwise.\n\nYou can assume that the input to `f` will always be a nonnegative integer.  The `%` operator will be helpful - look it up in last week's notebooks if you have forgotten.","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"d3e24c","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":0,"type":"cell"}
{"cell_type":"markdown","id":"ff9dec","input":"## Part 2\n\nWrite a function `k(a, b)` which returns a list consisting of the numbers `f(a), f(a+1), ..., f(b)` *in that order*, where `f` is the function from part 1.  You can assume that `a` and `b` are nonnegative integers with `a <= b`.\n\nFor example, `k(4, 6)` should be the list [f(4), f(5), f(6)] which is [0, 5, 0].","pos":3,"type":"cell"}
{"id":"6bfc06","input":"","pos":6,"type":"cell"}
{"id":0,"time":1611790621859,"type":"user"}
{"last_load":1611789835751,"type":"file"}